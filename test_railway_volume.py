#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Railway Volume Production Test
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã volume –≤ production –æ–∫—Ä—É–∂–µ–Ω–∏–∏
"""

import os
import sys
import logging
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import utils

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_railway_volume_production():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã Railway Volume –≤ production."""
    
    print("üöÄ RAILWAY VOLUME PRODUCTION TEST")
    print("=" * 50)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏:")
    print(f"   –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"   RAILWAY_VOLUME_MOUNT_PATH: {os.getenv('RAILWAY_VOLUME_MOUNT_PATH', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ë–î
    db_path = utils.get_db_path()
    print(f"   –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ volume
    is_volume_used = '/app/data' in db_path
    print(f"   Volume –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {'‚úÖ –î–ê' if is_volume_used else '‚ùå –ù–ï–¢'}")
    
    # –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
    print("\nüóÑÔ∏è –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    try:
        utils.init_local_db()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
        if os.path.exists(db_path):
            file_size = os.path.getsize(db_path)
            print(f"   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞: {db_path}")
            print(f"   üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            is_readable = os.access(db_path, os.R_OK)
            is_writable = os.access(db_path, os.W_OK)
            print(f"   üìñ –ß—Ç–µ–Ω–∏–µ: {'‚úÖ' if is_readable else '‚ùå'}")
            print(f"   ‚úèÔ∏è –ó–∞–ø–∏—Å—å: {'‚úÖ' if is_writable else '‚ùå'}")
            
        else:
            print(f"   ‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {db_path}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö
    print("\nüíæ –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_data = {
            'tg_user_id': 'test_volume_user',
            'fio': 'Test Volume User',
            'email': 'test@volume.railway',
            'job_title': 'Volume Tester',
            'phone': '+1234567890',
            'username': '@volume_test'
        }
        
        result = utils.save_user_to_local_db(test_user_data)
        if result:
            print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {test_user_data['fio']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
            user_exists = utils.is_user_registered(test_user_data['tg_user_id'])
            print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î: {'–î–ê' if user_exists else '–ù–ï–¢'}")
            
        else:
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ volume
    print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ volume:")
    if is_volume_used:
        volume_dir = os.path.dirname(db_path)
        if os.path.exists(volume_dir):
            try:
                # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ volume
                files = os.listdir(volume_dir)
                print(f"   üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ {volume_dir}:")
                for file in files:
                    file_path = os.path.join(volume_dir, file)
                    if os.path.isfile(file_path):
                        size = os.path.getsize(file_path)
                        print(f"      üìÑ {file} ({size} –±–∞–π—Ç)")
                    else:
                        print(f"      üìÅ {file}/ (–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è)")
                        
            except Exception as e:
                print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ volume: {e}")
        else:
            print(f"   ‚ùå Volume –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {volume_dir}")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
    if is_volume_used and os.path.exists(db_path):
        print("   üéâ SUCCESS: Railway Volume —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –º–µ–∂–¥—É –¥–µ–ø–ª–æ—è–º–∏")
        print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –ø–æ—Ç–µ—Ä–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö")
        return True
    else:
        print("   ‚ö†Ô∏è WARNING: Volume –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("   üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Railway Volume")
        return False

if __name__ == "__main__":
    success = test_railway_volume_production()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    status = "SUCCESS" if success else "FAILED"
    print(f"\nüïê –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: {timestamp}")
    print(f"üìä –°—Ç–∞—Ç—É—Å: {status}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è Railway
    logger.info(f"Railway Volume Test: {status} at {timestamp}")
