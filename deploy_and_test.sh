#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ GitHub
# –ê–≤—Ç–æ—Ä: GitHub Copilot
# –î–∞—Ç–∞: $(date)

set -e  # –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –î–ï–ü–õ–û–ô –í GITHUB"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–∞–º–∏
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python..."
if ! command -v python3 &> /dev/null; then
    print_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi
print_success "Python3 –Ω–∞–π–¥–µ–Ω: $(python3 --version)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Git
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Git..."
if ! command -v git &> /dev/null; then
    print_error "Git –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi
print_success "Git –Ω–∞–π–¥–µ–Ω: $(git --version)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    print_error "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º!"
    exit 1
fi
print_success "Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω"

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
REPO_NAME=$(basename `git rev-parse --show-toplevel`)
CURRENT_BRANCH=$(git branch --show-current)
print_status "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_NAME"
print_status "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
print_status "–ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
echo "=================================================="

if python3 test_bot_complete.py; then
    print_success "üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
else
    print_error "‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´! –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º."
    exit 1
fi

echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git status --porcelain

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
print_status "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Git..."
git add -A

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
if git diff --cached --quiet; then
    print_warning "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
else
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    COMMIT_MSG="ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ($(date '+%Y-%m-%d %H:%M:%S'))"
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: $COMMIT_MSG"
    git commit -m "$COMMIT_MSG"
    print_success "–ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    
    # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print_status "–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub..."
    if git push origin $CURRENT_BRANCH; then
        print_success "üöÄ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub!"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ GitHub"
        exit 1
    fi
fi

# –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
echo "=================================================="
print_success "‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù–´!"
echo "=================================================="

print_status "üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
echo "‚Ä¢ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_NAME"
echo "‚Ä¢ –í–µ—Ç–∫–∞: $CURRENT_BRANCH"
echo "‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --pretty=format:'%h - %s (%cr)')"
echo "‚Ä¢ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ: $(find . -name '*.py' | wc -l) Python —Ñ–∞–π–ª–æ–≤"
echo "‚Ä¢ –†–∞–∑–º–µ—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $(du -sh .git | cut -f1)"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
REPO_URL=$(git config --get remote.origin.url 2>/dev/null || echo "URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
if [[ $REPO_URL != "URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" ]]; then
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º SSH URL –≤ HTTPS –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if [[ $REPO_URL == git@github.com:* ]]; then
        HTTPS_URL="https://github.com/${REPO_URL#git@github.com:}"
        HTTPS_URL="${HTTPS_URL%.git}"
        echo "‚Ä¢ GitHub URL: $HTTPS_URL"
    else
        echo "‚Ä¢ GitHub URL: $REPO_URL"
    fi
fi

print_success "üéØ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!"
echo "=================================================="
