# -*- coding: utf-8 -*-

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler

import g_sheets
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ –º–æ–¥—É–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
from settings_handlers import display_paginated_list
from constants import SEARCH_CHOOSE_FIELD, AWAIT_SEARCH_QUERY

logger = logging.getLogger(__name__)


async def search_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–∏—Å–∫–∞."""
    keyboard = [
        [InlineKeyboardButton("–ü–æ –§–ò–û –≤–ª–∞–¥–µ–ª—å—Ü–∞", callback_data="search_by_name")],
        [InlineKeyboardButton("–ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã", callback_data="search_by_phone")]
    ]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞:", reply_markup=InlineKeyboardMarkup(keyboard))
    return SEARCH_CHOOSE_FIELD


async def search_field_chosen(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞."""
    query = update.callback_query
    await query.answer()
    context.user_data['search_field'] = query.data
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:")
    return AWAIT_SEARCH_QUERY


async def perform_search(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã."""
    user_id = str(update.effective_user.id)
    is_boss = (user_id == g_sheets.os.getenv("BOSS_ID"))
    search_query = update.message.text.lower().strip()
    loading_msg = await update.message.reply_text("üîç –í—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫...")

    all_cards = g_sheets.get_cards_from_sheet(user_id=None if is_boss else user_id)
    search_field = context.user_data.get('search_field')

    if search_field == 'search_by_name':
        results = [c for c in all_cards if search_query in c.get('–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã', '').lower() or search_query in c.get('–§–∞–º–∏–ª–∏—è –í–ª–∞–¥–µ–ª—å—Ü–∞', '').lower()]
    else:  # search_by_phone
        results = [c for c in all_cards if search_query in str(c.get('–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã', ''))]

    context.user_data['search_results'] = results
    await loading_msg.delete()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    # –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –Ω–µ –≤ callback_query, –Ω–∞–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    paginated_message = await update.message.reply_text("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")

    await display_paginated_list(
        update=update,
        context=context,
        message_to_edit=paginated_message,
        page=0,
        data_key='search_results',
        list_title="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞"
    )
    return ConversationHandler.END
