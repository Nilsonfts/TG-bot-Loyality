# -*- coding: utf-8 -*-

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler

import g_sheets
import utils
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ –º–æ–¥—É–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
from settings_handlers import display_paginated_list
from constants import SEARCH_CHOOSE_FIELD, AWAIT_SEARCH_QUERY

logger = logging.getLogger(__name__)


async def search_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–∏—Å–∫–∞."""
    keyboard = [
        [InlineKeyboardButton("–ü–æ –§–ò–û –≤–ª–∞–¥–µ–ª—å—Ü–∞", callback_data="search_by_name")],
        [InlineKeyboardButton("–ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã", callback_data="search_by_phone")]
    ]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞:", reply_markup=InlineKeyboardMarkup(keyboard))
    return SEARCH_CHOOSE_FIELD


async def search_field_chosen(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞."""
    query = update.callback_query
    await query.answer()
    context.user_data['search_field'] = query.data
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:")
    return AWAIT_SEARCH_QUERY


async def perform_search(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã."""
    user_id = str(update.effective_user.id)
    is_boss = (user_id == g_sheets.os.getenv("BOSS_ID"))
    search_query = utils.sanitize_input(update.message.text.lower().strip(), 100)
    
    if len(search_query) < 2:
        await update.message.reply_text("‚ùå –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞.")
        return AWAIT_SEARCH_QUERY
    
    loading_msg = await update.message.reply_text("üîç –í—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫...")

    search_field = context.user_data.get('search_field')
    search_type = 'name' if search_field == 'search_by_name' else 'phone'
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–∫–∞—Ç—å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î (–±—ã—Å—Ç—Ä–µ–µ)
    local_results = utils.search_applications_local(
        query=search_query,
        search_type=search_type,
        user_id=None if is_boss else user_id
    )
    
    if local_results:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –≤ —Ñ–æ—Ä–º–∞—Ç Google Sheets
        results = []
        for local_result in local_results:
            formatted_result = {
                '–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã': local_result.get('owner_first_name', ''),
                '–§–∞–º–∏–ª–∏—è –í–ª–∞–¥–µ–ª—å—Ü–∞': local_result.get('owner_last_name', ''),
                '–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã': local_result.get('card_number', ''),
                '–ö–∞–∫—É—é –∫–∞—Ä—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º?': local_result.get('card_type', ''),
                '–°—É–º–º–∞ –±–∞—Ä—Ç–µ—Ä–∞ –∏–ª–∏ % —Å–∫–∏–¥–∫–∏': local_result.get('amount', ''),
                '–°—Ç–∞—Ç—å—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç': local_result.get('category', ''),
                '–°—Ç–∞—Ç—É—Å –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è': local_result.get('status', ''),
                '–û—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏': local_result.get('created_at', ''),
                '–¢–ì –ó–∞–ø–æ–ª–Ω—è—é—â–µ–≥–æ': local_result.get('tg_user_id', ''),
                '–§–ò–û –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞': '–î–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î',  # –ú–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å
                '–¢–µ–≥ Telegram': '‚Äì'
            }
            results.append(formatted_result)
        
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î")
    else:
        # –ï—Å–ª–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –≤ Google Sheets
        all_cards = g_sheets.get_cards_from_sheet(user_id=None if is_boss else user_id)

        if search_field == 'search_by_name':
            results = [c for c in all_cards if search_query in c.get('–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã', '').lower() or search_query in c.get('–§–∞–º–∏–ª–∏—è –í–ª–∞–¥–µ–ª—å—Ü–∞', '').lower()]
        else:  # search_by_phone
            results = [c for c in all_cards if search_query in str(c.get('–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã', ''))]
        
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Google Sheets")

    context.user_data['search_results'] = results
    await loading_msg.delete()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    # –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –Ω–µ –≤ callback_query, –Ω–∞–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if results:
        search_summary = f"üîç <b>–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</b> {len(results)}\n"
        search_summary += f"<b>–ö—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞:</b> {'–§–ò–û –≤–ª–∞–¥–µ–ª—å—Ü–∞' if search_type == 'name' else '–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã'}\n"
        search_summary += f"<b>–ó–∞–ø—Ä–æ—Å:</b> {search_query}\n\n"
    else:
        search_summary = f"ü§∑ –ü–æ –∑–∞–ø—Ä–æ—Å—É '<b>{search_query}</b>' –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n\n"

    paginated_message = await update.message.reply_text(search_summary, parse_mode='HTML')

    await display_paginated_list(
        update=update,
        context=context,
        message_to_edit=paginated_message,
        page=0,
        data_key='search_results',
        list_title="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞"
    )
    return ConversationHandler.END
