#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ Google Sheets —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
"""

import logging
from datetime import datetime, timezone, timedelta
from g_sheets import write_row
from constants import SheetCols

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_real_google_export():
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ô –ó–ê–ü–ò–°–ò –í GOOGLE SHEETS")
    print("=" * 60)
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å Moscow timezone
    moscow_tz = timezone(timedelta(hours=3))
    current_time = datetime.now(moscow_tz).strftime('%Y-%m-%d %H:%M:%S')
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã)
    test_data = {
        SheetCols.TIMESTAMP: current_time,
        SheetCols.TG_ID: "123456789",
        SheetCols.TG_TAG: "@testuser",
        SheetCols.EMAIL: "test@example.com",
        SheetCols.FIO_INITIATOR: "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
        SheetCols.JOB_TITLE: "–ú–µ–Ω–µ–¥–∂–µ—Ä",
        SheetCols.PHONE_INITIATOR: "+7 900 123-45-67",
        SheetCols.OWNER_FIRST_NAME_COL: "–¢–µ—Å—Ç",
        SheetCols.OWNER_LAST_NAME_COL: "–¢–µ—Å—Ç–æ–≤",
        SheetCols.REASON_COL: "–°–∫–∏–¥–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É",
        SheetCols.CARD_TYPE_COL: "–î–∏—Å–∫–æ–Ω—Ç–Ω–∞—è",
        SheetCols.CARD_NUMBER_COL: "1234567890",
        SheetCols.CATEGORY_COL: "–ë–∞—Ä—Ç–µ—Ä",
        SheetCols.AMOUNT_COL: "10%",
        SheetCols.FREQUENCY_COL: "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ",
        SheetCols.ISSUE_LOCATION_COL: "–¢–µ—Å—Ç –ë–∞—Ä",
        SheetCols.STATUS_COL: "–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
    }
    
    print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã:")
    for key, value in test_data.items():
        print(f"  {key}: {value}")
    
    print(f"\nüìä –í—Å–µ–≥–æ –ø–æ–ª–µ–π: {len(test_data)}")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø–∏—Å–∞—Ç—å –≤ Google Sheets
    print("\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets...")
    try:
        result = write_row(test_data)
        if result:
            print("‚úÖ –£–°–ü–ï–•! –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Google Sheets")
        else:
            print("‚ùå –û–®–ò–ë–ö–ê! –ó–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å")
        return result
    except Exception as e:
        print(f"üí• –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ø—Ä–∏ –∑–∞–ø–∏—Å–∏: {e}")
        return False

if __name__ == "__main__":
    test_real_google_export()
