#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Railway Volume
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
"""

import os
import sys
import tempfile
import logging

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import utils

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_volume_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Railway Volume."""
    
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° RAILWAY VOLUME")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ë–µ–∑ volume (–ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ volume):")
    if 'RAILWAY_VOLUME_MOUNT_PATH' in os.environ:
        del os.environ['RAILWAY_VOLUME_MOUNT_PATH']
    
    db_path = utils.get_db_path()
    expected_local = os.path.join(os.getcwd(), 'bot_data.db')
    
    print(f"   –ü—É—Ç—å –∫ –ë–î: {db_path}")
    print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {expected_local}")
    print(f"   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: {db_path == expected_local}")
    
    # –¢–µ—Å—Ç 2: –° volume (production –Ω–∞ Railway)
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç production —Å volume:")
    test_volume_path = '/app/data'
    os.environ['RAILWAY_VOLUME_MOUNT_PATH'] = test_volume_path
    
    db_path = utils.get_db_path()
    expected_volume = os.path.join(test_volume_path, 'bot_data.db')
    
    print(f"   RAILWAY_VOLUME_MOUNT_PATH: {test_volume_path}")
    print(f"   –ü—É—Ç—å –∫ –ë–î: {db_path}")
    print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {expected_volume}")
    print(f"   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: {db_path == expected_volume}")
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ë–î
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
        with tempfile.TemporaryDirectory() as temp_dir:
            os.environ['RAILWAY_VOLUME_MOUNT_PATH'] = temp_dir
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
            utils.init_local_db()
            
            db_path = utils.get_db_path()
            db_exists = os.path.exists(db_path)
            
            print(f"   –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
            print(f"   –ë–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞: {db_path}")
            print(f"   –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {db_exists}")
            print(f"   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: {db_exists}")
            
            if db_exists:
                print(f"   üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(db_path)} –±–∞–π—Ç")
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ RAILWAY_VOLUME_MOUNT_PATH=/app/data –≤ Railway")
    print("   2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ volume 'superb-volume' –∫ mount path '/app/data'")
    print("   3. –î–µ–ø–ª–æ–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –ø–æ –ø—É—Ç–∏: /app/data/bot_data.db'")
    
    return True

if __name__ == "__main__":
    test_volume_integration()
